#include <stdio.h>#include <stdlib.h>#include <string.h>#include <sys/stat.h>#include <string.h>#include <locale.h>#include <unistd.h>#include <sys/types.h>#include <sys/socket.h>#include <netinet/in.h>#include <arpa/inet.h>#include <netdb.h>#include <sys/time.h>#include "utoall.h"#include "utoplt01.h"#include "pasdb.h"#include "ncportal.h"#include <iconv.h>#ifndef ZJJ_TOOL_H#define ZJJ_TOOL_H/*extern int ictPrint(long isDebug, const char* fmt, ...);//µ÷ÊÔº¯Êýextern int isVnameRegistered(char* vName);extern uint8 getTsidByVname(utShmHead *psShmHead, char* vName);extern char* getVnameByTsId(utShmHead *psShmHead, uint8 ltsid);extern int isTsidLogin(utShmHead *psShmHead, uint8 lTsid);extern int checkTsid(utShmHead *psShmHead, utPltDbHead *psDbHead, utMsgHead *psMsgHead, int iFd, char* caTsid, const char* platePath);*/int zjj_insert_shm(utShmHead *psShmHead, char *username, char *pass);char* zjj_find_shm(utShmHead *psShmHead, char *username);int addUserToShm(utShmHead *psShmHead);int isInUserShm(utShmHead *psShmHead);int ictPrint(long isDebug, const char* fmt, ...);int isVnameRegistered(char* vName);uint8 getTsidByVname(utShmHead *psShmHead, char* vName);char* getVnameByTsId(utShmHead *psShmHead, uint8 ltsid);int isTsidLogin(utShmHead *psShmHead, uint8 lTsid);int checkTsid(utShmHead *psShmHead, utPltDbHead *psDbHead, utMsgHead *psMsgHead, int iFd, char* caTsid, const char* platePath);#endif
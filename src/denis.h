// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* denis.h
   Generated by wsdl2h 2.8.19 from http://dennisapp.chinacloudapp.cn:82/PosWebService.asmx?wsdl and typemap.dat
   2015-03-02 01:39:25 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on denis.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tempuri = "http://tempuri.org/"

*/

#define SOAP_NAMESPACE_OF_tempuri	"http://tempuri.org/"
//gsoap tempuri schema namespace:	http://tempuri.org/
//gsoap tempuri schema elementForm:	qualified
//gsoap tempuri schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/

/// Built-in XSD type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://tempuri.org/":VipCard is a complexType.
///
struct tempuri__VipCard
{
/// Element "CardId" of XSD type xs:int.
    int                                  CardId                         1;	///< Required element.
/// Element "CardCode" of XSD type xs:string.
    char*                                CardCode                       0;	///< Optional element.
/// Element "VipName" of XSD type xs:string.
    char*                                VipName                        0;	///< Optional element.
/// Element "CardTypeId" of XSD type xs:int.
    int                                  CardTypeId                     1;	///< Required element.
/// Element "CardTypeName" of XSD type xs:string.
    char*                                CardTypeName                   0;	///< Optional element.
/// Element "CanCent" of XSD type xs:boolean.
    enum xsd__boolean                    CanCent                        1;	///< Required element.
/// Element "CanOwnCoupon" of XSD type xs:boolean.
    enum xsd__boolean                    CanOwnCoupon                   1;	///< Required element.
/// Element "CanDisc" of XSD type xs:boolean.
    enum xsd__boolean                    CanDisc                        1;	///< Required element.
/// Element "CanReturn" of XSD type xs:boolean.
    enum xsd__boolean                    CanReturn                      1;	///< Required element.
/// Element "ValidCent" of XSD type xs:double.
    double                               ValidCent                      1;	///< Required element.
/// Element "YearCent" of XSD type xs:double.
    double                               YearCent                       1;	///< Required element.
/// Element "StageCent" of XSD type xs:double.
    double                               StageCent                      1;	///< Required element.
/// Element "Hello" of XSD type xs:string.
    char*                                Hello                          0;	///< Optional element.
/// Element "IdCardCode" of XSD type xs:string.
    char*                                IdCardCode                     0;	///< Optional element.
/// Element "Birthday" of XSD type xs:string.
    char*                                Birthday                       0;	///< Optional element.
/// Element "Mobile" of XSD type xs:string.
    char*                                Mobile                         0;	///< Optional element.
/// Element "ValidDate" of XSD type xs:string.
    char*                                ValidDate                      0;	///< Optional element.
};

/// @brief "http://tempuri.org/":CrmSoapHeader is a complexType.
///
struct tempuri__CrmSoapHeader
{
/// Element "UserId" of XSD type xs:string.
    char*                                UserId                         0;	///< Optional element.
/// Element "Password" of XSD type xs:string.
    char*                                Password                       0;	///< Optional element.
/// @todo <anyAttribute namespace="##any">.
/// @todo Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// @brief "http://tempuri.org/":ArrayOfBuyData is a complexType.
///
struct tempuri__ArrayOfBuyData
{
/// Size of array of struct tempuri__BuyData* is 0..unbounded.
   $int                                  __sizeBuyData                  0;
/// Array struct tempuri__BuyData* of size 0..unbounded.
    struct tempuri__BuyData*             BuyData                        0;	///< Nillable pointer.
};

/// @brief "http://tempuri.org/":BuyData is a complexType.
///
struct tempuri__BuyData
{
/// Element "PosId" of XSD type xs:string.
    char*                                PosId                          0;	///< Optional element.
/// Element "BillId" of XSD type xs:int.
    int                                  BillId                         1;	///< Required element.
/// Element "BuyDateTime" of XSD type xs:string.
    char*                                BuyDateTime                    0;	///< Optional element.
/// Element "StoreName" of XSD type xs:string.
    char*                                StoreName                      0;	///< Optional element.
/// Element "CounterName" of XSD type xs:string.
    char*                                CounterName                    0;	///< Optional element.
/// Element "ProductName" of XSD type xs:string.
    char*                                ProductName                    0;	///< Optional element.
/// Element "BuyQty" of XSD type xs:double.
    double                               BuyQty                         1;	///< Required element.
/// Element "Amount" of XSD type xs:double.
    double                               Amount                         1;	///< Required element.
/// Element "DiscountAmount" of XSD type xs:double.
    double                               DiscountAmount                 1;	///< Required element.
/// Element "Score" of XSD type xs:double.
    double                               Score                          1;	///< Required element.
};

/// @brief Top-level root element "http://tempuri.org/":GetVipCard
/// @brief "http://tempuri.org/":GetVipCard is a complexType.
///
struct _tempuri__GetVipCard
{
/// Element "condType" of XSD type xs:int.
    int                                  condType                       1;	///< Required element.
/// Element "condValue" of XSD type xs:string.
    char*                                condValue                      0;	///< Optional element.
/// Element "cardCodeToCheck" of XSD type xs:string.
    char*                                cardCodeToCheck                0;	///< Optional element.
/// Element "verifyCode" of XSD type xs:string.
    char*                                verifyCode                     0;	///< Optional element.
/// Element "storeCode" of XSD type xs:string.
    char*                                storeCode                      0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":GetVipCardResponse
/// @brief "http://tempuri.org/":GetVipCardResponse is a complexType.
///
struct _tempuri__GetVipCardResponse
{
/// Element "GetVipCardResult" of XSD type xs:boolean.
    enum xsd__boolean                    GetVipCardResult               1;	///< Required element.
/// Element "msg" of XSD type xs:string.
    char*                                msg                            0;	///< Optional element.
/// Element "vipCard" of XSD type "http://tempuri.org/":VipCard.
    struct tempuri__VipCard*             vipCard                        0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":UpdateVipCent
/// @brief "http://tempuri.org/":UpdateVipCent is a complexType.
///
struct _tempuri__UpdateVipCent
{
/// Element "vipId" of XSD type xs:int.
    int                                  vipId                          1;	///< Required element.
/// Element "updateCent" of XSD type xs:double.
    double                               updateCent                     1;	///< Required element.
/// Element "updateType" of XSD type xs:int.
    int                                  updateType                     1;	///< Required element.
/// Element "storeCode" of XSD type xs:string.
    char*                                storeCode                      0;	///< Optional element.
/// Element "posId" of XSD type xs:string.
    char*                                posId                          0;	///< Optional element.
/// Element "billId" of XSD type xs:int.
    int                                  billId                         1;	///< Required element.
};

/// @brief Top-level root element "http://tempuri.org/":UpdateVipCentResponse
/// @brief "http://tempuri.org/":UpdateVipCentResponse is a complexType.
///
struct _tempuri__UpdateVipCentResponse
{
/// Element "UpdateVipCentResult" of XSD type xs:boolean.
    enum xsd__boolean                    UpdateVipCentResult            1;	///< Required element.
/// Element "msg" of XSD type xs:string.
    char*                                msg                            0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":VipRegisterInfo
/// @brief "http://tempuri.org/":VipRegisterInfo is a complexType.
///
struct _tempuri__VipRegisterInfo
{
/// Element "Mobile" of XSD type xs:string.
    char*                                Mobile                         0;	///< Optional element.
/// Element "IdNumber" of XSD type xs:string.
    char*                                IdNumber                       0;	///< Optional element.
/// Element "VipName" of XSD type xs:string.
    char*                                VipName                        0;	///< Optional element.
/// Element "Email" of XSD type xs:string.
    char*                                Email                          0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":VipRegisterInfoResponse
/// @brief "http://tempuri.org/":VipRegisterInfoResponse is a complexType.
///
struct _tempuri__VipRegisterInfoResponse
{
/// Element "VipRegisterInfoResult" of XSD type xs:boolean.
    enum xsd__boolean                    VipRegisterInfoResult          1;	///< Required element.
/// Element "msg" of XSD type xs:string.
    char*                                msg                            0;	///< Optional element.
/// Element "VipCode" of XSD type xs:string.
    char*                                VipCode                        0;	///< Optional element.
/// Element "VipType" of XSD type xs:int.
    int                                  VipType                        1;	///< Required element.
/// Element "Mobile_out" of XSD type xs:string.
    char*                                Mobile_USCOREout               0;	///< Optional element.
/// Element "IdNumber_out" of XSD type xs:string.
    char*                                IdNumber_USCOREout             0;	///< Optional element.
/// Element "VipId" of XSD type xs:int.
    int                                  VipId                          1;	///< Required element.
};

/// @brief Top-level root element "http://tempuri.org/":UpdateMemberInfo
/// @brief "http://tempuri.org/":UpdateMemberInfo is a complexType.
///
struct _tempuri__UpdateMemberInfo
{
/// Element "vipId" of XSD type xs:int.
    int                                  vipId                          1;	///< Required element.
/// Element "Birthday" of XSD type xs:string.
    char*                                Birthday                       0;	///< Optional element.
/// Element "Sex" of XSD type xs:int.
    int                                  Sex                            1;	///< Required element.
/// Element "Adrress" of XSD type xs:string.
    char*                                Adrress                        0;	///< Optional element.
/// Element "Email" of XSD type xs:string.
    char*                                Email                          0;	///< Optional element.
/// Element "Mobile" of XSD type xs:string.
    char*                                Mobile                         0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":UpdateMemberInfoResponse
/// @brief "http://tempuri.org/":UpdateMemberInfoResponse is a complexType.
///
struct _tempuri__UpdateMemberInfoResponse
{
/// Element "UpdateMemberInfoResult" of XSD type xs:boolean.
    enum xsd__boolean                    UpdateMemberInfoResult         1;	///< Required element.
/// Element "msg" of XSD type xs:string.
    char*                                msg                            0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":GetCardBuyList
/// @brief "http://tempuri.org/":GetCardBuyList is a complexType.
///
struct _tempuri__GetCardBuyList
{
/// Element "vipId" of XSD type xs:int.
    int                                  vipId                          1;	///< Required element.
/// Element "strStartDate" of XSD type xs:string.
    char*                                strStartDate                   0;	///< Optional element.
/// Element "strEndDate" of XSD type xs:string.
    char*                                strEndDate                     0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":GetCardBuyListResponse
/// @brief "http://tempuri.org/":GetCardBuyListResponse is a complexType.
///
struct _tempuri__GetCardBuyListResponse
{
/// Element "GetCardBuyListResult" of XSD type xs:boolean.
    enum xsd__boolean                    GetCardBuyListResult           1;	///< Required element.
/// Element "msg" of XSD type xs:string.
    char*                                msg                            0;	///< Optional element.
/// Element "buydatas" of XSD type "http://tempuri.org/":ArrayOfBuyData.
    struct tempuri__ArrayOfBuyData*      buydatas                       0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":Test
/// @brief "http://tempuri.org/":Test is a complexType.
///
struct _tempuri__Test
{
/// Element "Mobile" of XSD type xs:string.
    char*                                Mobile                         0;	///< Optional element.
/// Element "IdNumber" of XSD type xs:string.
    char*                                IdNumber                       0;	///< Optional element.
/// Element "VipName" of XSD type xs:string.
    char*                                VipName                        0;	///< Optional element.
/// Element "Email" of XSD type xs:string.
    char*                                Email                          0;	///< Optional element.
};

/// @brief Top-level root element "http://tempuri.org/":TestResponse
/// @brief "http://tempuri.org/":TestResponse is a complexType.
///
struct _tempuri__TestResponse
{
/// Element "TestResult" of XSD type xs:string.
    char*                                TestResult                     0;	///< Optional element.
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/

/// @brief Top-level root element "http://tempuri.org/":CrmSoapHeader of XSD type "http://tempuri.org/":CrmSoapHeader.
/// @note Use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tempuri service name:	PosWebServiceSoap 
//gsoap tempuri service type:	PosWebServiceSoap 
//gsoap tempuri service port:	http://dennisapp.chinacloudapp.cn:82/PosWebService.asmx 
//gsoap tempuri service namespace:	http://tempuri.org/ 
//gsoap tempuri service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref PosWebServiceSoap

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page PosWebServiceSoap Binding "PosWebServiceSoap"

@section PosWebServiceSoap_operations Operations of Binding "PosWebServiceSoap"

  - @ref __tempuri__GetVipCard

  - @ref __tempuri__UpdateVipCent

  - @ref __tempuri__VipRegisterInfo

  - @ref __tempuri__UpdateMemberInfo

  - @ref __tempuri__GetCardBuyList

  - @ref __tempuri__Test

  - @ref __tempuri__GetVipCard_

  - @ref __tempuri__UpdateVipCent_

  - @ref __tempuri__VipRegisterInfo_

  - @ref __tempuri__UpdateMemberInfo_

  - @ref __tempuri__GetCardBuyList_

  - @ref __tempuri__Test_

@section PosWebServiceSoap_ports Endpoints of Binding "PosWebServiceSoap"

  - http://dennisapp.chinacloudapp.cn:82/PosWebService.asmx

@note Multiple service bindings collected as one, use wsdl2h option -Nname to produce a separate service for each binding


*/

/******************************************************************************\
 *                                                                            *
 * SOAP Header                                                                *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Header is part of the gSOAP context and its content is accessed
through the soap.header variable. You may have to set the soap.actor variable
to serialize SOAP Headers with SOAP-ENV:actor or SOAP-ENV:role attributes.
Use option -j to remove entire SOAP Header definition.
Use option -k to remove the mustUnderstand qualifiers.

*/
struct SOAP_ENV__Header
{
    mustUnderstand                       // must be understood by receiver
/// "CrmSoapHeader" SOAP Header part element.
    struct tempuri__CrmSoapHeader*       tempuri__CrmSoapHeader        ;

};


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   PosWebServiceSoap                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__GetVipCard                                                    *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__GetVipCard" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/GetVipCard"

  - Addressing input action: "http://tempuri.org/GetVipCard"

  - Addressing output action: "http://tempuri.org/GetVipCardResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__GetVipCard(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__GetVipCard*        tempuri__GetVipCard,
    // output parameters:
    struct _tempuri__GetVipCardResponse*tempuri__GetVipCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__GetVipCard(
    struct soap *soap,
    // input parameters:
    struct _tempuri__GetVipCard*        tempuri__GetVipCard,
    // output parameters:
    struct _tempuri__GetVipCardResponse*tempuri__GetVipCardResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	GetVipCard SOAP
//gsoap tempuri service method-style:	GetVipCard document
//gsoap tempuri service method-encoding:	GetVipCard literal
//gsoap tempuri service method-input-action:	GetVipCard http://tempuri.org/GetVipCard
//gsoap tempuri service method-output-action:	GetVipCard http://tempuri.org/GetVipCardResponse
//gsoap tempuri service method-input-header-part:	GetVipCard tempuri__CrmSoapHeader
int __tempuri__GetVipCard(
    struct _tempuri__GetVipCard*        tempuri__GetVipCard,	///< Input parameter
    struct _tempuri__GetVipCardResponse*tempuri__GetVipCardResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__UpdateVipCent                                                 *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__UpdateVipCent" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/UpdateVipCent"

  - Addressing input action: "http://tempuri.org/UpdateVipCent"

  - Addressing output action: "http://tempuri.org/UpdateVipCentResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__UpdateVipCent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__UpdateVipCent*     tempuri__UpdateVipCent,
    // output parameters:
    struct _tempuri__UpdateVipCentResponse*tempuri__UpdateVipCentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__UpdateVipCent(
    struct soap *soap,
    // input parameters:
    struct _tempuri__UpdateVipCent*     tempuri__UpdateVipCent,
    // output parameters:
    struct _tempuri__UpdateVipCentResponse*tempuri__UpdateVipCentResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	UpdateVipCent SOAP
//gsoap tempuri service method-style:	UpdateVipCent document
//gsoap tempuri service method-encoding:	UpdateVipCent literal
//gsoap tempuri service method-input-action:	UpdateVipCent http://tempuri.org/UpdateVipCent
//gsoap tempuri service method-output-action:	UpdateVipCent http://tempuri.org/UpdateVipCentResponse
//gsoap tempuri service method-input-header-part:	UpdateVipCent tempuri__CrmSoapHeader
int __tempuri__UpdateVipCent(
    struct _tempuri__UpdateVipCent*     tempuri__UpdateVipCent,	///< Input parameter
    struct _tempuri__UpdateVipCentResponse*tempuri__UpdateVipCentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__VipRegisterInfo                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__VipRegisterInfo" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/VipRegisterInfo"

  - Addressing input action: "http://tempuri.org/VipRegisterInfo"

  - Addressing output action: "http://tempuri.org/VipRegisterInfoResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__VipRegisterInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__VipRegisterInfo*   tempuri__VipRegisterInfo,
    // output parameters:
    struct _tempuri__VipRegisterInfoResponse*tempuri__VipRegisterInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__VipRegisterInfo(
    struct soap *soap,
    // input parameters:
    struct _tempuri__VipRegisterInfo*   tempuri__VipRegisterInfo,
    // output parameters:
    struct _tempuri__VipRegisterInfoResponse*tempuri__VipRegisterInfoResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	VipRegisterInfo SOAP
//gsoap tempuri service method-style:	VipRegisterInfo document
//gsoap tempuri service method-encoding:	VipRegisterInfo literal
//gsoap tempuri service method-input-action:	VipRegisterInfo http://tempuri.org/VipRegisterInfo
//gsoap tempuri service method-output-action:	VipRegisterInfo http://tempuri.org/VipRegisterInfoResponse
//gsoap tempuri service method-input-header-part:	VipRegisterInfo tempuri__CrmSoapHeader
int __tempuri__VipRegisterInfo(
    struct _tempuri__VipRegisterInfo*   tempuri__VipRegisterInfo,	///< Input parameter
    struct _tempuri__VipRegisterInfoResponse*tempuri__VipRegisterInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__UpdateMemberInfo                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__UpdateMemberInfo" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/UpdateMemberInfo"

  - Addressing input action: "http://tempuri.org/UpdateMemberInfo"

  - Addressing output action: "http://tempuri.org/UpdateMemberInfoResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__UpdateMemberInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__UpdateMemberInfo*  tempuri__UpdateMemberInfo,
    // output parameters:
    struct _tempuri__UpdateMemberInfoResponse*tempuri__UpdateMemberInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__UpdateMemberInfo(
    struct soap *soap,
    // input parameters:
    struct _tempuri__UpdateMemberInfo*  tempuri__UpdateMemberInfo,
    // output parameters:
    struct _tempuri__UpdateMemberInfoResponse*tempuri__UpdateMemberInfoResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	UpdateMemberInfo SOAP
//gsoap tempuri service method-style:	UpdateMemberInfo document
//gsoap tempuri service method-encoding:	UpdateMemberInfo literal
//gsoap tempuri service method-input-action:	UpdateMemberInfo http://tempuri.org/UpdateMemberInfo
//gsoap tempuri service method-output-action:	UpdateMemberInfo http://tempuri.org/UpdateMemberInfoResponse
//gsoap tempuri service method-input-header-part:	UpdateMemberInfo tempuri__CrmSoapHeader
int __tempuri__UpdateMemberInfo(
    struct _tempuri__UpdateMemberInfo*  tempuri__UpdateMemberInfo,	///< Input parameter
    struct _tempuri__UpdateMemberInfoResponse*tempuri__UpdateMemberInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__GetCardBuyList                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__GetCardBuyList" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/GetCardBuyList"

  - Addressing input action: "http://tempuri.org/GetCardBuyList"

  - Addressing output action: "http://tempuri.org/GetCardBuyListResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__GetCardBuyList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__GetCardBuyList*    tempuri__GetCardBuyList,
    // output parameters:
    struct _tempuri__GetCardBuyListResponse*tempuri__GetCardBuyListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__GetCardBuyList(
    struct soap *soap,
    // input parameters:
    struct _tempuri__GetCardBuyList*    tempuri__GetCardBuyList,
    // output parameters:
    struct _tempuri__GetCardBuyListResponse*tempuri__GetCardBuyListResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	GetCardBuyList SOAP
//gsoap tempuri service method-style:	GetCardBuyList document
//gsoap tempuri service method-encoding:	GetCardBuyList literal
//gsoap tempuri service method-input-action:	GetCardBuyList http://tempuri.org/GetCardBuyList
//gsoap tempuri service method-output-action:	GetCardBuyList http://tempuri.org/GetCardBuyListResponse
//gsoap tempuri service method-input-header-part:	GetCardBuyList tempuri__CrmSoapHeader
int __tempuri__GetCardBuyList(
    struct _tempuri__GetCardBuyList*    tempuri__GetCardBuyList,	///< Input parameter
    struct _tempuri__GetCardBuyListResponse*tempuri__GetCardBuyListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Test                                                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__Test" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/Test"

  - Addressing input action: "http://tempuri.org/Test"

  - Addressing output action: "http://tempuri.org/TestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Test(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__Test*              tempuri__Test,
    // output parameters:
    struct _tempuri__TestResponse      *tempuri__TestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Test(
    struct soap *soap,
    // input parameters:
    struct _tempuri__Test*              tempuri__Test,
    // output parameters:
    struct _tempuri__TestResponse      *tempuri__TestResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	Test SOAP
//gsoap tempuri service method-style:	Test document
//gsoap tempuri service method-encoding:	Test literal
//gsoap tempuri service method-input-action:	Test http://tempuri.org/Test
//gsoap tempuri service method-output-action:	Test http://tempuri.org/TestResponse
int __tempuri__Test(
    struct _tempuri__Test*              tempuri__Test,	///< Input parameter
    struct _tempuri__TestResponse      *tempuri__TestResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__GetVipCard_                                                   *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__GetVipCard_" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/GetVipCard"

  - Addressing input action: "http://tempuri.org/GetVipCard"

  - Addressing output action: "http://tempuri.org/GetVipCardResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__GetVipCard_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__GetVipCard*        tempuri__GetVipCard,
    // output parameters:
    struct _tempuri__GetVipCardResponse*tempuri__GetVipCardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__GetVipCard_(
    struct soap *soap,
    // input parameters:
    struct _tempuri__GetVipCard*        tempuri__GetVipCard,
    // output parameters:
    struct _tempuri__GetVipCardResponse*tempuri__GetVipCardResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	GetVipCard_ SOAP
//gsoap tempuri service method-style:	GetVipCard_ document
//gsoap tempuri service method-encoding:	GetVipCard_ literal
//gsoap tempuri service method-input-action:	GetVipCard_ http://tempuri.org/GetVipCard
//gsoap tempuri service method-output-action:	GetVipCard_ http://tempuri.org/GetVipCardResponse
//gsoap tempuri service method-input-header-part:	GetVipCard_ tempuri__CrmSoapHeader
int __tempuri__GetVipCard_(
    struct _tempuri__GetVipCard*        tempuri__GetVipCard,	///< Input parameter
    struct _tempuri__GetVipCardResponse*tempuri__GetVipCardResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__UpdateVipCent_                                                *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__UpdateVipCent_" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/UpdateVipCent"

  - Addressing input action: "http://tempuri.org/UpdateVipCent"

  - Addressing output action: "http://tempuri.org/UpdateVipCentResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__UpdateVipCent_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__UpdateVipCent*     tempuri__UpdateVipCent,
    // output parameters:
    struct _tempuri__UpdateVipCentResponse*tempuri__UpdateVipCentResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__UpdateVipCent_(
    struct soap *soap,
    // input parameters:
    struct _tempuri__UpdateVipCent*     tempuri__UpdateVipCent,
    // output parameters:
    struct _tempuri__UpdateVipCentResponse*tempuri__UpdateVipCentResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	UpdateVipCent_ SOAP
//gsoap tempuri service method-style:	UpdateVipCent_ document
//gsoap tempuri service method-encoding:	UpdateVipCent_ literal
//gsoap tempuri service method-input-action:	UpdateVipCent_ http://tempuri.org/UpdateVipCent
//gsoap tempuri service method-output-action:	UpdateVipCent_ http://tempuri.org/UpdateVipCentResponse
//gsoap tempuri service method-input-header-part:	UpdateVipCent_ tempuri__CrmSoapHeader
int __tempuri__UpdateVipCent_(
    struct _tempuri__UpdateVipCent*     tempuri__UpdateVipCent,	///< Input parameter
    struct _tempuri__UpdateVipCentResponse*tempuri__UpdateVipCentResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__VipRegisterInfo_                                              *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__VipRegisterInfo_" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/VipRegisterInfo"

  - Addressing input action: "http://tempuri.org/VipRegisterInfo"

  - Addressing output action: "http://tempuri.org/VipRegisterInfoResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__VipRegisterInfo_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__VipRegisterInfo*   tempuri__VipRegisterInfo,
    // output parameters:
    struct _tempuri__VipRegisterInfoResponse*tempuri__VipRegisterInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__VipRegisterInfo_(
    struct soap *soap,
    // input parameters:
    struct _tempuri__VipRegisterInfo*   tempuri__VipRegisterInfo,
    // output parameters:
    struct _tempuri__VipRegisterInfoResponse*tempuri__VipRegisterInfoResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	VipRegisterInfo_ SOAP
//gsoap tempuri service method-style:	VipRegisterInfo_ document
//gsoap tempuri service method-encoding:	VipRegisterInfo_ literal
//gsoap tempuri service method-input-action:	VipRegisterInfo_ http://tempuri.org/VipRegisterInfo
//gsoap tempuri service method-output-action:	VipRegisterInfo_ http://tempuri.org/VipRegisterInfoResponse
//gsoap tempuri service method-input-header-part:	VipRegisterInfo_ tempuri__CrmSoapHeader
int __tempuri__VipRegisterInfo_(
    struct _tempuri__VipRegisterInfo*   tempuri__VipRegisterInfo,	///< Input parameter
    struct _tempuri__VipRegisterInfoResponse*tempuri__VipRegisterInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__UpdateMemberInfo_                                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__UpdateMemberInfo_" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/UpdateMemberInfo"

  - Addressing input action: "http://tempuri.org/UpdateMemberInfo"

  - Addressing output action: "http://tempuri.org/UpdateMemberInfoResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__UpdateMemberInfo_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__UpdateMemberInfo*  tempuri__UpdateMemberInfo,
    // output parameters:
    struct _tempuri__UpdateMemberInfoResponse*tempuri__UpdateMemberInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__UpdateMemberInfo_(
    struct soap *soap,
    // input parameters:
    struct _tempuri__UpdateMemberInfo*  tempuri__UpdateMemberInfo,
    // output parameters:
    struct _tempuri__UpdateMemberInfoResponse*tempuri__UpdateMemberInfoResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	UpdateMemberInfo_ SOAP
//gsoap tempuri service method-style:	UpdateMemberInfo_ document
//gsoap tempuri service method-encoding:	UpdateMemberInfo_ literal
//gsoap tempuri service method-input-action:	UpdateMemberInfo_ http://tempuri.org/UpdateMemberInfo
//gsoap tempuri service method-output-action:	UpdateMemberInfo_ http://tempuri.org/UpdateMemberInfoResponse
//gsoap tempuri service method-input-header-part:	UpdateMemberInfo_ tempuri__CrmSoapHeader
int __tempuri__UpdateMemberInfo_(
    struct _tempuri__UpdateMemberInfo*  tempuri__UpdateMemberInfo,	///< Input parameter
    struct _tempuri__UpdateMemberInfoResponse*tempuri__UpdateMemberInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__GetCardBuyList_                                               *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__GetCardBuyList_" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/GetCardBuyList"

  - Addressing input action: "http://tempuri.org/GetCardBuyList"

  - Addressing output action: "http://tempuri.org/GetCardBuyListResponse"

  - Request message has mandatory header part(s) (see @ref SOAP_ENV__Header):
    - tempuri__CrmSoapHeader

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__GetCardBuyList_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__GetCardBuyList*    tempuri__GetCardBuyList,
    // output parameters:
    struct _tempuri__GetCardBuyListResponse*tempuri__GetCardBuyListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__GetCardBuyList_(
    struct soap *soap,
    // input parameters:
    struct _tempuri__GetCardBuyList*    tempuri__GetCardBuyList,
    // output parameters:
    struct _tempuri__GetCardBuyListResponse*tempuri__GetCardBuyListResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	GetCardBuyList_ SOAP
//gsoap tempuri service method-style:	GetCardBuyList_ document
//gsoap tempuri service method-encoding:	GetCardBuyList_ literal
//gsoap tempuri service method-input-action:	GetCardBuyList_ http://tempuri.org/GetCardBuyList
//gsoap tempuri service method-output-action:	GetCardBuyList_ http://tempuri.org/GetCardBuyListResponse
//gsoap tempuri service method-input-header-part:	GetCardBuyList_ tempuri__CrmSoapHeader
int __tempuri__GetCardBuyList_(
    struct _tempuri__GetCardBuyList*    tempuri__GetCardBuyList,	///< Input parameter
    struct _tempuri__GetCardBuyListResponse*tempuri__GetCardBuyListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Test_                                                         *
 *                                                                            *
\******************************************************************************/


/** Operation "__tempuri__Test_" of service binding "PosWebServiceSoap".

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/Test"

  - Addressing input action: "http://tempuri.org/Test"

  - Addressing output action: "http://tempuri.org/TestResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Test_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    struct _tempuri__Test*              tempuri__Test,
    // output parameters:
    struct _tempuri__TestResponse      *tempuri__TestResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Test_(
    struct soap *soap,
    // input parameters:
    struct _tempuri__Test*              tempuri__Test,
    // output parameters:
    struct _tempuri__TestResponse      *tempuri__TestResponse
  );
@endcode

*/

//gsoap tempuri service method-protocol:	Test_ SOAP
//gsoap tempuri service method-style:	Test_ document
//gsoap tempuri service method-encoding:	Test_ literal
//gsoap tempuri service method-input-action:	Test_ http://tempuri.org/Test
//gsoap tempuri service method-output-action:	Test_ http://tempuri.org/TestResponse
int __tempuri__Test_(
    struct _tempuri__Test*              tempuri__Test,	///< Input parameter
    struct _tempuri__TestResponse      *tempuri__TestResponse	///< Output parameter
);

/**

@page PosWebServiceSoap Binding "PosWebServiceSoap"

@section PosWebServiceSoap_policy_enablers Policy Enablers of Binding "PosWebServiceSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section tempuri Top-level root elements of schema "http://tempuri.org/"

  - <GetVipCard> @ref _tempuri__GetVipCard
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__GetVipCard(struct soap*, struct _tempuri__GetVipCard*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__GetVipCard(struct soap*, struct _tempuri__GetVipCard*);
    @endcode

  - <GetVipCardResponse> @ref _tempuri__GetVipCardResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__GetVipCardResponse(struct soap*, struct _tempuri__GetVipCardResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__GetVipCardResponse(struct soap*, struct _tempuri__GetVipCardResponse*);
    @endcode

  - <CrmSoapHeader> (use wsdl2h option -g to auto-generate)

  - <UpdateVipCent> @ref _tempuri__UpdateVipCent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__UpdateVipCent(struct soap*, struct _tempuri__UpdateVipCent*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__UpdateVipCent(struct soap*, struct _tempuri__UpdateVipCent*);
    @endcode

  - <UpdateVipCentResponse> @ref _tempuri__UpdateVipCentResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__UpdateVipCentResponse(struct soap*, struct _tempuri__UpdateVipCentResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__UpdateVipCentResponse(struct soap*, struct _tempuri__UpdateVipCentResponse*);
    @endcode

  - <VipRegisterInfo> @ref _tempuri__VipRegisterInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__VipRegisterInfo(struct soap*, struct _tempuri__VipRegisterInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__VipRegisterInfo(struct soap*, struct _tempuri__VipRegisterInfo*);
    @endcode

  - <VipRegisterInfoResponse> @ref _tempuri__VipRegisterInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__VipRegisterInfoResponse(struct soap*, struct _tempuri__VipRegisterInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__VipRegisterInfoResponse(struct soap*, struct _tempuri__VipRegisterInfoResponse*);
    @endcode

  - <UpdateMemberInfo> @ref _tempuri__UpdateMemberInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__UpdateMemberInfo(struct soap*, struct _tempuri__UpdateMemberInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__UpdateMemberInfo(struct soap*, struct _tempuri__UpdateMemberInfo*);
    @endcode

  - <UpdateMemberInfoResponse> @ref _tempuri__UpdateMemberInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__UpdateMemberInfoResponse(struct soap*, struct _tempuri__UpdateMemberInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__UpdateMemberInfoResponse(struct soap*, struct _tempuri__UpdateMemberInfoResponse*);
    @endcode

  - <GetCardBuyList> @ref _tempuri__GetCardBuyList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__GetCardBuyList(struct soap*, struct _tempuri__GetCardBuyList*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__GetCardBuyList(struct soap*, struct _tempuri__GetCardBuyList*);
    @endcode

  - <GetCardBuyListResponse> @ref _tempuri__GetCardBuyListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__GetCardBuyListResponse(struct soap*, struct _tempuri__GetCardBuyListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__GetCardBuyListResponse(struct soap*, struct _tempuri__GetCardBuyListResponse*);
    @endcode

  - <Test> @ref _tempuri__Test
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Test(struct soap*, struct _tempuri__Test*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Test(struct soap*, struct _tempuri__Test*);
    @endcode

  - <TestResponse> @ref _tempuri__TestResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__TestResponse(struct soap*, struct _tempuri__TestResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__TestResponse(struct soap*, struct _tempuri__TestResponse*);
    @endcode

*/

/* End of denis.h */
